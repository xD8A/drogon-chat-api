/**
 *
 *  UsersCtrl.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>
#include "UsersCtrlBase.h"

#include "UsersExt.h"
using namespace drogon;

using namespace drogon_model::sqlite3;

/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the users table.
 */

class UsersCtrl: public drogon::HttpController<UsersCtrl>, public UsersCtrlBase<UsersExt>
{
  public:
    METHOD_LIST_BEGIN
    ADD_METHOD_TO(UsersCtrl::login,"/login",Post,Options);
    ADD_METHOD_TO(UsersCtrl::getOne,"/users/{1}",Get,Options,"LoginFilter");
    ADD_METHOD_TO(UsersCtrl::updateOne,"/users/{1}",Put,Options,"LoginFilter");
    ADD_METHOD_TO(UsersCtrl::deleteOne,"/users/{1}",Delete,Options,"LoginFilter");
    ADD_METHOD_TO(UsersCtrl::get,"/users",Get,Options,"LoginFilter");
    ADD_METHOD_TO(UsersCtrl::create,"/users",Post,Options,"LoginFilter");
    //ADD_METHOD_TO(UsersCtrl::update,"/users",Put,Options);
    METHOD_LIST_END

    void login(const HttpRequestPtr &req,
                std::function<void(const HttpResponsePtr &)> &&callback);

    void getOne(const HttpRequestPtr &req,
                std::function<void(const HttpResponsePtr &)> &&callback,
                Users::PrimaryKeyType &&id);
    void updateOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Users::PrimaryKeyType &&id);
    void deleteOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Users::PrimaryKeyType &&id);
    void get(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);
    void create(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);

};

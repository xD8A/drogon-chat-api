/**
 *
 *  ContactsCtrl.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>
#include "ContactsCtrlBase.h"

#include "Contacts.h"
using namespace drogon;

using namespace drogon_model::sqlite3;

/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the contacts table.
 */

class ContactsCtrl: public drogon::HttpController<ContactsCtrl>, public ContactsCtrlBase<>
{
  public:
    METHOD_LIST_BEGIN
    ADD_METHOD_TO(ContactsCtrl::getOne,"/contacts/{1}",Get,Options,"LoginFilter");
    ADD_METHOD_TO(ContactsCtrl::updateOne,"/contacts/{1}",Put,Options,"LoginFilter");
    ADD_METHOD_TO(ContactsCtrl::deleteOne,"/contacts/{1}",Delete,Options,"LoginFilter");
    ADD_METHOD_TO(ContactsCtrl::get,"/contacts",Get,Options,"LoginFilter");
    ADD_METHOD_TO(ContactsCtrl::create,"/contacts",Post,Options,"LoginFilter");
    //ADD_METHOD_TO(ContactsCtrl::update,"/contacts",Put,Options,"LoginFilter");
    METHOD_LIST_END
     
    void getOne(const HttpRequestPtr &req,
                std::function<void(const HttpResponsePtr &)> &&callback,
                Contacts::PrimaryKeyType &&id);
    void updateOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Contacts::PrimaryKeyType &&id);
    void deleteOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Contacts::PrimaryKeyType &&id);
    void get(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);
    void create(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);

};
